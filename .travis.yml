# We need a decent ubuntu dist
sudo: required
dist: trusty

# Modern cpp settings from
#  http://genbattle.bitbucket.org/blog/2016/01/17/c++-travis-ci/
language: cpp
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-5
            - cmake
            - cmake-data
            - git
            - libgtk2.0-dev
            - pkg-config
            - libavcodec-dev
            - libavformat-dev
            - python-dev
            - python-numpy
            - libtbb2
            - libtbb-dev
            - libjpeg-dev
            - libpng-dev
            - libtiff-dev
            - libjasper-dev
            - libdc1394-22-dev
            - libboost-all-dev
      env: 
        - COMPILER=g++-5
        - EIGEN=3.2.9
        - EIGEN=3.3-beta2

#For OpenCV installation
before_script:
  - git clone https://github.com/opencv/opencv.git
  - cd opencv
  - git checkout 4.0.0
  - cd ..

  - git clone https://github.com/opencv/opencv_contrib.git
  - cd opencv_contrib
  - git checkout 4.0.0
  - cd ..

  - cd opencv
  - mkdir build
  - cd build
  - cmake -D CMAKE_BUILD_TYPE=RELEASE -D BUILD_EXAMPLES=OFF -D BUILD_opencv_apps=OFF -D BUILD_DOCS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF -D CMAKE_INSTALL_PREFIX=/usr/local ..
  - make -j$(nproc)
  - sudo make install
  - sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
  - sudo ldconfig

  - cd ../../

before_install:
  - pip install --user cpp-coveralls
  - sudo -H pip install --upgrade requests[security]
install:
  - sudo apt-get install -y -qq lcov
  - sudo apt install libeigen3-dev
  - wget https://bitbucket.org/eigen/eigen/get/$EIGEN.tar.bz2 -O /tmp/eigen.tar.bz2
  - mkdir eigen3-src && tar -xvjf /tmp/eigen.tar.bz2 -C eigen3-src --strip-components 1
  - cd eigen3-src && mkdir build && cd build && cmake .. && sudo make install && cd ../..

script:
  - export CXX=$COMPILER;
  - mkdir build
  - cd build
  - cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ../
  - make
  - make code_coverage
  - test/cpp-test

after_success:
  - coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*"

notifications:
  email: false
